"use strict";var d=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var b=(e,o)=>{for(var s in o)d(e,s,{get:o[s],enumerable:!0})},z=(e,o,s,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of O(o))!M.call(e,t)&&t!==s&&d(e,t,{get:()=>o[t],enumerable:!(n=w(o,t))||n.enumerable});return e};var I=e=>z(d({},"__esModule",{value:!0}),e);var N={};b(N,{createOpenAI:()=>g,default:()=>K,detectEnvironment:()=>m,generateText:()=>f,hello:()=>h});module.exports=I(N);var y=require("zod-to-json-schema");function g(e){let o=(e.baseURL??"https://api-inference.modelscope.cn/v1").replace(/\/$/,""),s=e.apiKey;if(!s)throw new Error("apiKey is required");let n=t=>({provider:"openai",endpoint:`${o}/chat/completions`,model:t,apiKey:s});return n.baseURL=o,n.apiKey=s,n.chat=t=>n(t),n}async function f(e){let{messages:o,onToolCall:s}=e,n=[...o],t=new Map,p=e.tools;if(Array.isArray(p))for(let r of p)t.set(r.name,r);else if(p&&typeof p=="object")for(let[r,l]of Object.entries(p))t.set(r,l);let u=t.size?Array.from(t.values()).map(r=>({type:"function",function:{name:r.name,description:r.description,parameters:(0,y.zodToJsonSchema)(r.parameters)}})):void 0,T=`${("client"in e?e.client.baseURL:e.model.endpoint.replace(/\/chat\/completions$/,"")).replace(/\/$/,"")}/chat/completions`,C="client"in e?e.client.apiKey:e.model.apiKey,A="client"in e?e.model:e.model.model;for(;;){let l=(await fetch(T,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${C}`},body:JSON.stringify({model:A,messages:n,tools:u})}).then(a=>a.json())).choices?.[0]?.message;if(!l)throw new Error("No message returned");n.push(l);let c=l.tool_calls;if(!c||c.length===0)return{text:l.content};s&&c.map(i=>i.function.name).forEach(i=>s(i));for(let a of c){let i=t.get(a.function.name);if(!i)throw new Error(`Tool ${a.function.name} not found`);let x=i.parameters.parse(JSON.parse(a.function.arguments)),R=await i.execute(x);n.push({role:"tool",content:R,tool_call_id:a.id})}}}function m(){return typeof window<"u"&&typeof document<"u"?"browser":"node"}function h(e="world"){return`Hello, ${e}! from ${m()}`}var K={detectEnvironment:m,hello:h};0&&(module.exports={createOpenAI,detectEnvironment,generateText,hello});
//# sourceMappingURL=index.cjs.map